[{"name":"abstract class ConnectionValidator<T> : CrossFormFieldValidator<T> ","description":"com.icell.external.carlosformito.core.validator.connections.ConnectionValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-connection-validator/index.html","searchKeys":["ConnectionValidator","abstract class ConnectionValidator<T> : CrossFormFieldValidator<T> ","com.icell.external.carlosformito.core.validator.connections.ConnectionValidator"]},{"name":"abstract class MultiConnectionValidator<T> : CrossFormFieldValidator<T> ","description":"com.icell.external.carlosformito.core.validator.connections.MultiConnectionValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-multi-connection-validator/index.html","searchKeys":["MultiConnectionValidator","abstract class MultiConnectionValidator<T> : CrossFormFieldValidator<T> ","com.icell.external.carlosformito.core.validator.connections.MultiConnectionValidator"]},{"name":"abstract fun <T> getFieldItem(id: String): FormFieldItem<T>","description":"com.icell.external.carlosformito.core.api.FormManager.getFieldItem","location":"core/com.icell.external.carlosformito.core.api/-form-manager/get-field-item.html","searchKeys":["getFieldItem","abstract fun <T> getFieldItem(id: String): FormFieldItem<T>","com.icell.external.carlosformito.core.api.FormManager.getFieldItem"]},{"name":"abstract fun <T> getFieldValue(id: String): T?","description":"com.icell.external.carlosformito.core.api.validator.FormValueContext.getFieldValue","location":"core/com.icell.external.carlosformito.core.api.validator/-form-value-context/get-field-value.html","searchKeys":["getFieldValue","abstract fun <T> getFieldValue(id: String): T?","com.icell.external.carlosformito.core.api.validator.FormValueContext.getFieldValue"]},{"name":"abstract fun <T> onFieldValueChanged(id: String, value: T?)","description":"com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldValueChanged","location":"core/com.icell.external.carlosformito.core.api/-form-field-item-listener/on-field-value-changed.html","searchKeys":["onFieldValueChanged","abstract fun <T> onFieldValueChanged(id: String, value: T?)","com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldValueChanged"]},{"name":"abstract fun <T> onFieldValueChanged(value: T?)","description":"com.icell.external.carlosformito.core.api.FormFieldItem.onFieldValueChanged","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/on-field-value-changed.html","searchKeys":["onFieldValueChanged","abstract fun <T> onFieldValueChanged(value: T?)","com.icell.external.carlosformito.core.api.FormFieldItem.onFieldValueChanged"]},{"name":"abstract fun clearForm()","description":"com.icell.external.carlosformito.core.api.FormManager.clearForm","location":"core/com.icell.external.carlosformito.core.api/-form-manager/clear-form.html","searchKeys":["clearForm","abstract fun clearForm()","com.icell.external.carlosformito.core.api.FormManager.clearForm"]},{"name":"abstract fun onFieldFocusCleared()","description":"com.icell.external.carlosformito.core.api.FormFieldItem.onFieldFocusCleared","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/on-field-focus-cleared.html","searchKeys":["onFieldFocusCleared","abstract fun onFieldFocusCleared()","com.icell.external.carlosformito.core.api.FormFieldItem.onFieldFocusCleared"]},{"name":"abstract fun onFieldFocusCleared(id: String)","description":"com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldFocusCleared","location":"core/com.icell.external.carlosformito.core.api/-form-field-item-listener/on-field-focus-cleared.html","searchKeys":["onFieldFocusCleared","abstract fun onFieldFocusCleared(id: String)","com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldFocusCleared"]},{"name":"abstract fun onFieldValueReset()","description":"com.icell.external.carlosformito.core.api.FormFieldItem.onFieldValueReset","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/on-field-value-reset.html","searchKeys":["onFieldValueReset","abstract fun onFieldValueReset()","com.icell.external.carlosformito.core.api.FormFieldItem.onFieldValueReset"]},{"name":"abstract fun onFieldValueReset(id: String)","description":"com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldValueReset","location":"core/com.icell.external.carlosformito.core.api/-form-field-item-listener/on-field-value-reset.html","searchKeys":["onFieldValueReset","abstract fun onFieldValueReset(id: String)","com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldValueReset"]},{"name":"abstract fun onFieldVisibilityChanged(id: String, visible: Boolean)","description":"com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldVisibilityChanged","location":"core/com.icell.external.carlosformito.core.api/-form-field-item-listener/on-field-visibility-changed.html","searchKeys":["onFieldVisibilityChanged","abstract fun onFieldVisibilityChanged(id: String, visible: Boolean)","com.icell.external.carlosformito.core.api.FormFieldItemListener.onFieldVisibilityChanged"]},{"name":"abstract fun onFieldVisibilityChanged(visible: Boolean)","description":"com.icell.external.carlosformito.core.api.FormFieldItem.onFieldVisibilityChanged","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/on-field-visibility-changed.html","searchKeys":["onFieldVisibilityChanged","abstract fun onFieldVisibilityChanged(visible: Boolean)","com.icell.external.carlosformito.core.api.FormFieldItem.onFieldVisibilityChanged"]},{"name":"abstract fun printFormState()","description":"com.icell.external.carlosformito.core.api.FormManager.printFormState","location":"core/com.icell.external.carlosformito.core.api/-form-manager/print-form-state.html","searchKeys":["printFormState","abstract fun printFormState()","com.icell.external.carlosformito.core.api.FormManager.printFormState"]},{"name":"abstract fun setFormInvalid()","description":"com.icell.external.carlosformito.core.api.FormManager.setFormInvalid","location":"core/com.icell.external.carlosformito.core.api/-form-manager/set-form-invalid.html","searchKeys":["setFormInvalid","abstract fun setFormInvalid()","com.icell.external.carlosformito.core.api.FormManager.setFormInvalid"]},{"name":"abstract suspend fun initFormManager(autoValidationExceptionHandler: CoroutineExceptionHandler? = null)","description":"com.icell.external.carlosformito.core.api.FormManager.initFormManager","location":"core/com.icell.external.carlosformito.core.api/-form-manager/init-form-manager.html","searchKeys":["initFormManager","abstract suspend fun initFormManager(autoValidationExceptionHandler: CoroutineExceptionHandler? = null)","com.icell.external.carlosformito.core.api.FormManager.initFormManager"]},{"name":"abstract suspend fun validate(value: T?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidator.validate","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validator/validate.html","searchKeys":["validate","abstract suspend fun validate(value: T?): FormFieldValidationResult","com.icell.external.carlosformito.core.api.validator.FormFieldValidator.validate"]},{"name":"abstract suspend fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.api.validator.CrossFormFieldValidator.validate","location":"core/com.icell.external.carlosformito.core.api.validator/-cross-form-field-validator/validate.html","searchKeys":["validate","abstract suspend fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","com.icell.external.carlosformito.core.api.validator.CrossFormFieldValidator.validate"]},{"name":"abstract suspend fun validateField(): Boolean","description":"com.icell.external.carlosformito.core.api.FormFieldItem.validateField","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/validate-field.html","searchKeys":["validateField","abstract suspend fun validateField(): Boolean","com.icell.external.carlosformito.core.api.FormFieldItem.validateField"]},{"name":"abstract suspend fun validateField(id: String): Boolean","description":"com.icell.external.carlosformito.core.api.FormFieldItemListener.validateField","location":"core/com.icell.external.carlosformito.core.api/-form-field-item-listener/validate-field.html","searchKeys":["validateField","abstract suspend fun validateField(id: String): Boolean","com.icell.external.carlosformito.core.api.FormFieldItemListener.validateField"]},{"name":"abstract suspend fun validateForm(): Boolean","description":"com.icell.external.carlosformito.core.api.FormManager.validateForm","location":"core/com.icell.external.carlosformito.core.api/-form-manager/validate-form.html","searchKeys":["validateForm","abstract suspend fun validateForm(): Boolean","com.icell.external.carlosformito.core.api.FormManager.validateForm"]},{"name":"abstract val allRequiredFieldFilled: StateFlow<Boolean>","description":"com.icell.external.carlosformito.core.api.FormManager.allRequiredFieldFilled","location":"core/com.icell.external.carlosformito.core.api/-form-manager/all-required-field-filled.html","searchKeys":["allRequiredFieldFilled","abstract val allRequiredFieldFilled: StateFlow<Boolean>","com.icell.external.carlosformito.core.api.FormManager.allRequiredFieldFilled"]},{"name":"abstract val connectedFieldId: String","description":"com.icell.external.carlosformito.core.validator.connections.ConnectionValidator.connectedFieldId","location":"core/com.icell.external.carlosformito.core.validator.connections/-connection-validator/connected-field-id.html","searchKeys":["connectedFieldId","abstract val connectedFieldId: String","com.icell.external.carlosformito.core.validator.connections.ConnectionValidator.connectedFieldId"]},{"name":"abstract val connectedFieldIds: List<String>","description":"com.icell.external.carlosformito.core.validator.connections.MultiConnectionValidator.connectedFieldIds","location":"core/com.icell.external.carlosformito.core.validator.connections/-multi-connection-validator/connected-field-ids.html","searchKeys":["connectedFieldIds","abstract val connectedFieldIds: List<String>","com.icell.external.carlosformito.core.validator.connections.MultiConnectionValidator.connectedFieldIds"]},{"name":"abstract val fieldState: StateFlow<FormFieldState<T>>","description":"com.icell.external.carlosformito.core.api.FormFieldItem.fieldState","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/field-state.html","searchKeys":["fieldState","abstract val fieldState: StateFlow<FormFieldState<T>>","com.icell.external.carlosformito.core.api.FormFieldItem.fieldState"]},{"name":"abstract val validationInProgress: StateFlow<Boolean>","description":"com.icell.external.carlosformito.core.api.FormManager.validationInProgress","location":"core/com.icell.external.carlosformito.core.api/-form-manager/validation-in-progress.html","searchKeys":["validationInProgress","abstract val validationInProgress: StateFlow<Boolean>","com.icell.external.carlosformito.core.api.FormManager.validationInProgress"]},{"name":"class CarlosFormManager(formFields: List<FormField<*>>, validationStrategy: FormFieldValidationStrategy = FormFieldValidationStrategy.Manual) : FormManager","description":"com.icell.external.carlosformito.core.CarlosFormManager","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/index.html","searchKeys":["CarlosFormManager","class CarlosFormManager(formFields: List<FormField<*>>, validationStrategy: FormFieldValidationStrategy = FormFieldValidationStrategy.Manual) : FormManager","com.icell.external.carlosformito.core.CarlosFormManager"]},{"name":"class CompareToValidator<T>(val connectedFieldId: String, errorMessageId: Int? = null, compare: (fieldValue: T, connectedFieldValue: T) -> Boolean) : ConnectionValidator<T> ","description":"com.icell.external.carlosformito.core.validator.connections.CompareToValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-compare-to-validator/index.html","searchKeys":["CompareToValidator","class CompareToValidator<T>(val connectedFieldId: String, errorMessageId: Int? = null, compare: (fieldValue: T, connectedFieldValue: T) -> Boolean) : ConnectionValidator<T> ","com.icell.external.carlosformito.core.validator.connections.CompareToValidator"]},{"name":"class ContainsNumberValidator(errorMessageId: Int? = null) : FormFieldValidator<String> ","description":"com.icell.external.carlosformito.core.validator.ContainsNumberValidator","location":"core/com.icell.external.carlosformito.core.validator/-contains-number-validator/index.html","searchKeys":["ContainsNumberValidator","class ContainsNumberValidator(errorMessageId: Int? = null) : FormFieldValidator<String> ","com.icell.external.carlosformito.core.validator.ContainsNumberValidator"]},{"name":"class ContainsSpecialCharacterValidator(errorMessageId: Int? = null) : FormFieldValidator<String> ","description":"com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator","location":"core/com.icell.external.carlosformito.core.validator/-contains-special-character-validator/index.html","searchKeys":["ContainsSpecialCharacterValidator","class ContainsSpecialCharacterValidator(errorMessageId: Int? = null) : FormFieldValidator<String> ","com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator"]},{"name":"class ContainsUpperAndLowercaseValidator(errorMessageId: Int? = null) : FormFieldValidator<String> ","description":"com.icell.external.carlosformito.core.validator.ContainsUpperAndLowercaseValidator","location":"core/com.icell.external.carlosformito.core.validator/-contains-upper-and-lowercase-validator/index.html","searchKeys":["ContainsUpperAndLowercaseValidator","class ContainsUpperAndLowercaseValidator(errorMessageId: Int? = null) : FormFieldValidator<String> ","com.icell.external.carlosformito.core.validator.ContainsUpperAndLowercaseValidator"]},{"name":"class DateMaxValidator(maxValue: LocalDate, errorMessageId: Int? = null) : FormFieldValidator<LocalDate> ","description":"com.icell.external.carlosformito.core.validator.DateMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-date-max-validator/index.html","searchKeys":["DateMaxValidator","class DateMaxValidator(maxValue: LocalDate, errorMessageId: Int? = null) : FormFieldValidator<LocalDate> ","com.icell.external.carlosformito.core.validator.DateMaxValidator"]},{"name":"class DateMinMaxValidator(minValue: LocalDate, maxValue: LocalDate, errorMessageId: Int? = null) : FormFieldValidator<LocalDate> ","description":"com.icell.external.carlosformito.core.validator.DateMinMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-date-min-max-validator/index.html","searchKeys":["DateMinMaxValidator","class DateMinMaxValidator(minValue: LocalDate, maxValue: LocalDate, errorMessageId: Int? = null) : FormFieldValidator<LocalDate> ","com.icell.external.carlosformito.core.validator.DateMinMaxValidator"]},{"name":"class DateMinValidator(minValue: LocalDate, errorMessageId: Int? = null) : FormFieldValidator<LocalDate> ","description":"com.icell.external.carlosformito.core.validator.DateMinValidator","location":"core/com.icell.external.carlosformito.core.validator/-date-min-validator/index.html","searchKeys":["DateMinValidator","class DateMinValidator(minValue: LocalDate, errorMessageId: Int? = null) : FormFieldValidator<LocalDate> ","com.icell.external.carlosformito.core.validator.DateMinValidator"]},{"name":"class EqualsToValidator<T>(val connectedFieldId: String, errorMessageId: Int? = null) : ConnectionValidator<T> ","description":"com.icell.external.carlosformito.core.validator.connections.EqualsToValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-equals-to-validator/index.html","searchKeys":["EqualsToValidator","class EqualsToValidator<T>(val connectedFieldId: String, errorMessageId: Int? = null) : ConnectionValidator<T> ","com.icell.external.carlosformito.core.validator.connections.EqualsToValidator"]},{"name":"class IntegerMaxValidator(maxValue: Int, errorMessageId: Int? = null) : FormFieldValidator<Int> ","description":"com.icell.external.carlosformito.core.validator.IntegerMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-integer-max-validator/index.html","searchKeys":["IntegerMaxValidator","class IntegerMaxValidator(maxValue: Int, errorMessageId: Int? = null) : FormFieldValidator<Int> ","com.icell.external.carlosformito.core.validator.IntegerMaxValidator"]},{"name":"class IntegerMinMaxValidator(minValue: Int, maxValue: Int, errorMessageId: Int? = null) : FormFieldValidator<Int> ","description":"com.icell.external.carlosformito.core.validator.IntegerMinMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-integer-min-max-validator/index.html","searchKeys":["IntegerMinMaxValidator","class IntegerMinMaxValidator(minValue: Int, maxValue: Int, errorMessageId: Int? = null) : FormFieldValidator<Int> ","com.icell.external.carlosformito.core.validator.IntegerMinMaxValidator"]},{"name":"class IntegerMinValidator(minValue: Int, errorMessageId: Int? = null) : FormFieldValidator<Int> ","description":"com.icell.external.carlosformito.core.validator.IntegerMinValidator","location":"core/com.icell.external.carlosformito.core.validator/-integer-min-validator/index.html","searchKeys":["IntegerMinValidator","class IntegerMinValidator(minValue: Int, errorMessageId: Int? = null) : FormFieldValidator<Int> ","com.icell.external.carlosformito.core.validator.IntegerMinValidator"]},{"name":"class NotEqualsToValidator<T>(val connectedFieldId: String, errorMessageId: Int? = null) : ConnectionValidator<T> ","description":"com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-not-equals-to-validator/index.html","searchKeys":["NotEqualsToValidator","class NotEqualsToValidator<T>(val connectedFieldId: String, errorMessageId: Int? = null) : ConnectionValidator<T> ","com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator"]},{"name":"class TextMinLengthValidator(minLength: Int, errorMessageId: Int? = null) : FormFieldValidator<String> ","description":"com.icell.external.carlosformito.core.validator.TextMinLengthValidator","location":"core/com.icell.external.carlosformito.core.validator/-text-min-length-validator/index.html","searchKeys":["TextMinLengthValidator","class TextMinLengthValidator(minLength: Int, errorMessageId: Int? = null) : FormFieldValidator<String> ","com.icell.external.carlosformito.core.validator.TextMinLengthValidator"]},{"name":"class TextRegexValidator(pattern: String, errorMessageId: Int? = null) : FormFieldValidator<String> ","description":"com.icell.external.carlosformito.core.validator.TextRegexValidator","location":"core/com.icell.external.carlosformito.core.validator/-text-regex-validator/index.html","searchKeys":["TextRegexValidator","class TextRegexValidator(pattern: String, errorMessageId: Int? = null) : FormFieldValidator<String> ","com.icell.external.carlosformito.core.validator.TextRegexValidator"]},{"name":"class TimeMaxValidator(maxValue: LocalTime, errorMessageId: Int? = null) : FormFieldValidator<LocalTime> ","description":"com.icell.external.carlosformito.core.validator.TimeMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-time-max-validator/index.html","searchKeys":["TimeMaxValidator","class TimeMaxValidator(maxValue: LocalTime, errorMessageId: Int? = null) : FormFieldValidator<LocalTime> ","com.icell.external.carlosformito.core.validator.TimeMaxValidator"]},{"name":"class TimeMinMaxValidator(minValue: LocalTime, maxValue: LocalTime, errorMessageId: Int? = null) : FormFieldValidator<LocalTime> ","description":"com.icell.external.carlosformito.core.validator.TimeMinMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-time-min-max-validator/index.html","searchKeys":["TimeMinMaxValidator","class TimeMinMaxValidator(minValue: LocalTime, maxValue: LocalTime, errorMessageId: Int? = null) : FormFieldValidator<LocalTime> ","com.icell.external.carlosformito.core.validator.TimeMinMaxValidator"]},{"name":"class TimeMinValidator(minValue: LocalTime, errorMessageId: Int? = null) : FormFieldValidator<LocalTime> ","description":"com.icell.external.carlosformito.core.validator.TimeMinValidator","location":"core/com.icell.external.carlosformito.core.validator/-time-min-validator/index.html","searchKeys":["TimeMinValidator","class TimeMinValidator(minValue: LocalTime, errorMessageId: Int? = null) : FormFieldValidator<LocalTime> ","com.icell.external.carlosformito.core.validator.TimeMinValidator"]},{"name":"class ValueRequiredValidator<T>(errorMessageId: Int? = null) : FormFieldValidator<T> ","description":"com.icell.external.carlosformito.core.validator.ValueRequiredValidator","location":"core/com.icell.external.carlosformito.core.validator/-value-required-validator/index.html","searchKeys":["ValueRequiredValidator","class ValueRequiredValidator<T>(errorMessageId: Int? = null) : FormFieldValidator<T> ","com.icell.external.carlosformito.core.validator.ValueRequiredValidator"]},{"name":"const val EMAIL_REGEXP: String","description":"com.icell.external.carlosformito.core.validator.regex.Regexp.EMAIL_REGEXP","location":"core/com.icell.external.carlosformito.core.validator.regex/-regexp/-e-m-a-i-l_-r-e-g-e-x-p.html","searchKeys":["EMAIL_REGEXP","const val EMAIL_REGEXP: String","com.icell.external.carlosformito.core.validator.regex.Regexp.EMAIL_REGEXP"]},{"name":"const val LETTERS: String","description":"com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.Companion.LETTERS","location":"core/com.icell.external.carlosformito.core.validator/-contains-special-character-validator/-companion/-l-e-t-t-e-r-s.html","searchKeys":["LETTERS","const val LETTERS: String","com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.Companion.LETTERS"]},{"name":"const val NUMBERS: String","description":"com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.Companion.NUMBERS","location":"core/com.icell.external.carlosformito.core.validator/-contains-special-character-validator/-companion/-n-u-m-b-e-r-s.html","searchKeys":["NUMBERS","const val NUMBERS: String","com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.Companion.NUMBERS"]},{"name":"constructor()","description":"com.icell.external.carlosformito.core.validator.connections.ConnectionValidator.ConnectionValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-connection-validator/-connection-validator.html","searchKeys":["ConnectionValidator","constructor()","com.icell.external.carlosformito.core.validator.connections.ConnectionValidator.ConnectionValidator"]},{"name":"constructor()","description":"com.icell.external.carlosformito.core.validator.connections.MultiConnectionValidator.MultiConnectionValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-multi-connection-validator/-multi-connection-validator.html","searchKeys":["MultiConnectionValidator","constructor()","com.icell.external.carlosformito.core.validator.connections.MultiConnectionValidator.MultiConnectionValidator"]},{"name":"constructor(connectedFieldId: String, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.connections.EqualsToValidator.EqualsToValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-equals-to-validator/-equals-to-validator.html","searchKeys":["EqualsToValidator","constructor(connectedFieldId: String, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.connections.EqualsToValidator.EqualsToValidator"]},{"name":"constructor(connectedFieldId: String, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator.NotEqualsToValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-not-equals-to-validator/-not-equals-to-validator.html","searchKeys":["NotEqualsToValidator","constructor(connectedFieldId: String, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator.NotEqualsToValidator"]},{"name":"constructor(connectedFieldId: String, errorMessageId: Int? = null, compare: (fieldValue: T, connectedFieldValue: T) -> Boolean)","description":"com.icell.external.carlosformito.core.validator.connections.CompareToValidator.CompareToValidator","location":"core/com.icell.external.carlosformito.core.validator.connections/-compare-to-validator/-compare-to-validator.html","searchKeys":["CompareToValidator","constructor(connectedFieldId: String, errorMessageId: Int? = null, compare: (fieldValue: T, connectedFieldValue: T) -> Boolean)","com.icell.external.carlosformito.core.validator.connections.CompareToValidator.CompareToValidator"]},{"name":"constructor(delay: Duration? = null)","description":"com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoInline.AutoInline","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-validation-strategy/-auto-inline/-auto-inline.html","searchKeys":["AutoInline","constructor(delay: Duration? = null)","com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoInline.AutoInline"]},{"name":"constructor(errorMessageId: Int)","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Message.Message","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message/-message.html","searchKeys":["Message","constructor(errorMessageId: Int)","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Message.Message"]},{"name":"constructor(errorMessageId: Int, formatArgs: List<Any>)","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs.MessageWithArgs","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message-with-args/-message-with-args.html","searchKeys":["MessageWithArgs","constructor(errorMessageId: Int, formatArgs: List<Any>)","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs.MessageWithArgs"]},{"name":"constructor(errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.ContainsNumberValidator.ContainsNumberValidator","location":"core/com.icell.external.carlosformito.core.validator/-contains-number-validator/-contains-number-validator.html","searchKeys":["ContainsNumberValidator","constructor(errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.ContainsNumberValidator.ContainsNumberValidator"]},{"name":"constructor(errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.ContainsSpecialCharacterValidator","location":"core/com.icell.external.carlosformito.core.validator/-contains-special-character-validator/-contains-special-character-validator.html","searchKeys":["ContainsSpecialCharacterValidator","constructor(errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.ContainsSpecialCharacterValidator"]},{"name":"constructor(errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.ContainsUpperAndLowercaseValidator.ContainsUpperAndLowercaseValidator","location":"core/com.icell.external.carlosformito.core.validator/-contains-upper-and-lowercase-validator/-contains-upper-and-lowercase-validator.html","searchKeys":["ContainsUpperAndLowercaseValidator","constructor(errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.ContainsUpperAndLowercaseValidator.ContainsUpperAndLowercaseValidator"]},{"name":"constructor(errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.ValueRequiredValidator.ValueRequiredValidator","location":"core/com.icell.external.carlosformito.core.validator/-value-required-validator/-value-required-validator.html","searchKeys":["ValueRequiredValidator","constructor(errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.ValueRequiredValidator.ValueRequiredValidator"]},{"name":"constructor(formFields: List<FormField<*>>, validationStrategy: FormFieldValidationStrategy = FormFieldValidationStrategy.Manual)","description":"com.icell.external.carlosformito.core.CarlosFormManager.CarlosFormManager","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/-carlos-form-manager.html","searchKeys":["CarlosFormManager","constructor(formFields: List<FormField<*>>, validationStrategy: FormFieldValidationStrategy = FormFieldValidationStrategy.Manual)","com.icell.external.carlosformito.core.CarlosFormManager.CarlosFormManager"]},{"name":"constructor(id: String, initialValue: T? = null, initialValidationResult: FormFieldValidationResult? = null, validators: List<IsFormFieldValidator<T>> = emptyList(), customValidationStrategy: FormFieldValidationStrategy? = null)","description":"com.icell.external.carlosformito.core.api.model.FormField.FormField","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/-form-field.html","searchKeys":["FormField","constructor(id: String, initialValue: T? = null, initialValidationResult: FormFieldValidationResult? = null, validators: List<IsFormFieldValidator<T>> = emptyList(), customValidationStrategy: FormFieldValidationStrategy? = null)","com.icell.external.carlosformito.core.api.model.FormField.FormField"]},{"name":"constructor(maxValue: Int, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.IntegerMaxValidator.IntegerMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-integer-max-validator/-integer-max-validator.html","searchKeys":["IntegerMaxValidator","constructor(maxValue: Int, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.IntegerMaxValidator.IntegerMaxValidator"]},{"name":"constructor(maxValue: LocalDate, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.DateMaxValidator.DateMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-date-max-validator/-date-max-validator.html","searchKeys":["DateMaxValidator","constructor(maxValue: LocalDate, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.DateMaxValidator.DateMaxValidator"]},{"name":"constructor(maxValue: LocalTime, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.TimeMaxValidator.TimeMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-time-max-validator/-time-max-validator.html","searchKeys":["TimeMaxValidator","constructor(maxValue: LocalTime, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.TimeMaxValidator.TimeMaxValidator"]},{"name":"constructor(minLength: Int, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.TextMinLengthValidator.TextMinLengthValidator","location":"core/com.icell.external.carlosformito.core.validator/-text-min-length-validator/-text-min-length-validator.html","searchKeys":["TextMinLengthValidator","constructor(minLength: Int, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.TextMinLengthValidator.TextMinLengthValidator"]},{"name":"constructor(minValue: Int, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.IntegerMinValidator.IntegerMinValidator","location":"core/com.icell.external.carlosformito.core.validator/-integer-min-validator/-integer-min-validator.html","searchKeys":["IntegerMinValidator","constructor(minValue: Int, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.IntegerMinValidator.IntegerMinValidator"]},{"name":"constructor(minValue: Int, maxValue: Int, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.IntegerMinMaxValidator.IntegerMinMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-integer-min-max-validator/-integer-min-max-validator.html","searchKeys":["IntegerMinMaxValidator","constructor(minValue: Int, maxValue: Int, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.IntegerMinMaxValidator.IntegerMinMaxValidator"]},{"name":"constructor(minValue: LocalDate, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.DateMinValidator.DateMinValidator","location":"core/com.icell.external.carlosformito.core.validator/-date-min-validator/-date-min-validator.html","searchKeys":["DateMinValidator","constructor(minValue: LocalDate, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.DateMinValidator.DateMinValidator"]},{"name":"constructor(minValue: LocalDate, maxValue: LocalDate, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.DateMinMaxValidator.DateMinMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-date-min-max-validator/-date-min-max-validator.html","searchKeys":["DateMinMaxValidator","constructor(minValue: LocalDate, maxValue: LocalDate, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.DateMinMaxValidator.DateMinMaxValidator"]},{"name":"constructor(minValue: LocalTime, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.TimeMinValidator.TimeMinValidator","location":"core/com.icell.external.carlosformito.core.validator/-time-min-validator/-time-min-validator.html","searchKeys":["TimeMinValidator","constructor(minValue: LocalTime, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.TimeMinValidator.TimeMinValidator"]},{"name":"constructor(minValue: LocalTime, maxValue: LocalTime, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.TimeMinMaxValidator.TimeMinMaxValidator","location":"core/com.icell.external.carlosformito.core.validator/-time-min-max-validator/-time-min-max-validator.html","searchKeys":["TimeMinMaxValidator","constructor(minValue: LocalTime, maxValue: LocalTime, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.TimeMinMaxValidator.TimeMinMaxValidator"]},{"name":"constructor(pattern: String, errorMessageId: Int? = null)","description":"com.icell.external.carlosformito.core.validator.TextRegexValidator.TextRegexValidator","location":"core/com.icell.external.carlosformito.core.validator/-text-regex-validator/-text-regex-validator.html","searchKeys":["TextRegexValidator","constructor(pattern: String, errorMessageId: Int? = null)","com.icell.external.carlosformito.core.validator.TextRegexValidator.TextRegexValidator"]},{"name":"constructor(value: T? = null, validationInProgress: Boolean = false, validationResult: FormFieldValidationResult? = null)","description":"com.icell.external.carlosformito.core.api.model.FormFieldState.FormFieldState","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/-form-field-state.html","searchKeys":["FormFieldState","constructor(value: T? = null, validationInProgress: Boolean = false, validationResult: FormFieldValidationResult? = null)","com.icell.external.carlosformito.core.api.model.FormFieldState.FormFieldState"]},{"name":"data class AutoInline(val delay: Duration? = null) : FormFieldValidationStrategy","description":"com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoInline","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-validation-strategy/-auto-inline/index.html","searchKeys":["AutoInline","data class AutoInline(val delay: Duration? = null) : FormFieldValidationStrategy","com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoInline"]},{"name":"data class FormField<T>(val id: String, val initialValue: T? = null, val initialValidationResult: FormFieldValidationResult? = null, val validators: List<IsFormFieldValidator<T>> = emptyList(), val customValidationStrategy: FormFieldValidationStrategy? = null)","description":"com.icell.external.carlosformito.core.api.model.FormField","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/index.html","searchKeys":["FormField","data class FormField<T>(val id: String, val initialValue: T? = null, val initialValidationResult: FormFieldValidationResult? = null, val validators: List<IsFormFieldValidator<T>> = emptyList(), val customValidationStrategy: FormFieldValidationStrategy? = null)","com.icell.external.carlosformito.core.api.model.FormField"]},{"name":"data class FormFieldState<T>(val value: T? = null, val validationInProgress: Boolean = false, val validationResult: FormFieldValidationResult? = null)","description":"com.icell.external.carlosformito.core.api.model.FormFieldState","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/index.html","searchKeys":["FormFieldState","data class FormFieldState<T>(val value: T? = null, val validationInProgress: Boolean = false, val validationResult: FormFieldValidationResult? = null)","com.icell.external.carlosformito.core.api.model.FormFieldState"]},{"name":"data class Message(val errorMessageId: Int) : FormFieldValidationResult.Invalid","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Message","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message/index.html","searchKeys":["Message","data class Message(val errorMessageId: Int) : FormFieldValidationResult.Invalid","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Message"]},{"name":"data class MessageWithArgs(val errorMessageId: Int, val formatArgs: List<Any>) : FormFieldValidationResult.Invalid","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message-with-args/index.html","searchKeys":["MessageWithArgs","data class MessageWithArgs(val errorMessageId: Int, val formatArgs: List<Any>) : FormFieldValidationResult.Invalid","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs"]},{"name":"data object AutoOnFocusClear : FormFieldValidationStrategy","description":"com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoOnFocusClear","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-validation-strategy/-auto-on-focus-clear/index.html","searchKeys":["AutoOnFocusClear","data object AutoOnFocusClear : FormFieldValidationStrategy","com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoOnFocusClear"]},{"name":"data object Manual : FormFieldValidationStrategy","description":"com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.Manual","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-validation-strategy/-manual/index.html","searchKeys":["Manual","data object Manual : FormFieldValidationStrategy","com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.Manual"]},{"name":"data object Unknown : FormFieldValidationResult.Invalid","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Unknown","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-unknown/index.html","searchKeys":["Unknown","data object Unknown : FormFieldValidationResult.Invalid","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Unknown"]},{"name":"data object Valid : FormFieldValidationResult","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Valid","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-valid/index.html","searchKeys":["Valid","data object Valid : FormFieldValidationResult","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Valid"]},{"name":"fun <T> FormFieldItem<T>.collectFieldState(context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldState","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-state.html","searchKeys":["collectFieldState","fun <T> FormFieldItem<T>.collectFieldState(context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","com.icell.external.carlosformito.core.ui.extensions.collectFieldState"]},{"name":"fun <T> FormFieldItem<T>.collectFieldStateWithLifecycle(lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldStateWithLifecycle","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-state-with-lifecycle.html","searchKeys":["collectFieldStateWithLifecycle","fun <T> FormFieldItem<T>.collectFieldStateWithLifecycle(lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","com.icell.external.carlosformito.core.ui.extensions.collectFieldStateWithLifecycle"]},{"name":"fun <T> FormFieldItem<T>.collectFieldValue(context: CoroutineContext = EmptyCoroutineContext): T?","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldValue","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-value.html","searchKeys":["collectFieldValue","fun <T> FormFieldItem<T>.collectFieldValue(context: CoroutineContext = EmptyCoroutineContext): T?","com.icell.external.carlosformito.core.ui.extensions.collectFieldValue"]},{"name":"fun <T> FormFieldItem<T>.collectFieldValueWithLifecycle(lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): T?","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldValueWithLifecycle","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-value-with-lifecycle.html","searchKeys":["collectFieldValueWithLifecycle","fun <T> FormFieldItem<T>.collectFieldValueWithLifecycle(lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): T?","com.icell.external.carlosformito.core.ui.extensions.collectFieldValueWithLifecycle"]},{"name":"fun <T> FormManager.collectFieldState(id: String, context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldState","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-state.html","searchKeys":["collectFieldState","fun <T> FormManager.collectFieldState(id: String, context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","com.icell.external.carlosformito.core.ui.extensions.collectFieldState"]},{"name":"fun <T> FormManager.collectFieldStateWithLifecycle(id: String, lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldStateWithLifecycle","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-state-with-lifecycle.html","searchKeys":["collectFieldStateWithLifecycle","fun <T> FormManager.collectFieldStateWithLifecycle(id: String, lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): State<FormFieldState<T>>","com.icell.external.carlosformito.core.ui.extensions.collectFieldStateWithLifecycle"]},{"name":"fun <T> FormManager.collectFieldValue(id: String, context: CoroutineContext = EmptyCoroutineContext): T?","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldValue","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-value.html","searchKeys":["collectFieldValue","fun <T> FormManager.collectFieldValue(id: String, context: CoroutineContext = EmptyCoroutineContext): T?","com.icell.external.carlosformito.core.ui.extensions.collectFieldValue"]},{"name":"fun <T> FormManager.collectFieldValueWithLifecycle(id: String, lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): T?","description":"com.icell.external.carlosformito.core.ui.extensions.collectFieldValueWithLifecycle","location":"core/com.icell.external.carlosformito.core.ui.extensions/collect-field-value-with-lifecycle.html","searchKeys":["collectFieldValueWithLifecycle","fun <T> FormManager.collectFieldValueWithLifecycle(id: String, lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current, minActiveState: Lifecycle.State = Lifecycle.State.STARTED, context: CoroutineContext = EmptyCoroutineContext): T?","com.icell.external.carlosformito.core.ui.extensions.collectFieldValueWithLifecycle"]},{"name":"fun <T> FormValueContext.requireFieldValue(id: String): T","description":"com.icell.external.carlosformito.core.api.requireFieldValue","location":"core/com.icell.external.carlosformito.core.api/require-field-value.html","searchKeys":["requireFieldValue","fun <T> FormValueContext.requireFieldValue(id: String): T","com.icell.external.carlosformito.core.api.requireFieldValue"]},{"name":"fun FormFieldState<*>.errorMessage(): String?","description":"com.icell.external.carlosformito.core.ui.extensions.errorMessage","location":"core/com.icell.external.carlosformito.core.ui.extensions/error-message.html","searchKeys":["errorMessage","fun FormFieldState<*>.errorMessage(): String?","com.icell.external.carlosformito.core.ui.extensions.errorMessage"]},{"name":"fun FormFieldValidationResult.Invalid.errorMessage(): String?","description":"com.icell.external.carlosformito.core.ui.extensions.errorMessage","location":"core/com.icell.external.carlosformito.core.ui.extensions/error-message.html","searchKeys":["errorMessage","fun FormFieldValidationResult.Invalid.errorMessage(): String?","com.icell.external.carlosformito.core.ui.extensions.errorMessage"]},{"name":"fun Modifier.focusStepper(triggerKeyCodes: List<Int> = listOf(KEYCODE_TAB, KEYCODE_ENTER), nextFocusDirection: FocusDirection = FocusDirection.Down): Modifier","description":"com.icell.external.carlosformito.core.ui.focusStepper","location":"core/com.icell.external.carlosformito.core.ui/focus-stepper.html","searchKeys":["focusStepper","fun Modifier.focusStepper(triggerKeyCodes: List<Int> = listOf(KEYCODE_TAB, KEYCODE_ENTER), nextFocusDirection: FocusDirection = FocusDirection.Down): Modifier","com.icell.external.carlosformito.core.ui.focusStepper"]},{"name":"fun Modifier.onFocusCleared(onFocusCleared: () -> Unit): Modifier","description":"com.icell.external.carlosformito.core.ui.onFocusCleared","location":"core/com.icell.external.carlosformito.core.ui/on-focus-cleared.html","searchKeys":["onFocusCleared","fun Modifier.onFocusCleared(onFocusCleared: () -> Unit): Modifier","com.icell.external.carlosformito.core.ui.onFocusCleared"]},{"name":"fun Modifier.testId(value: String): Modifier","description":"com.icell.external.carlosformito.core.ui.testId","location":"core/com.icell.external.carlosformito.core.ui/test-id.html","searchKeys":["testId","fun Modifier.testId(value: String): Modifier","com.icell.external.carlosformito.core.ui.testId"]},{"name":"fun TrackVisibilityEffect(onVisibilityChanged: (visible: Boolean) -> Unit)","description":"com.icell.external.carlosformito.core.ui.TrackVisibilityEffect","location":"core/com.icell.external.carlosformito.core.ui/-track-visibility-effect.html","searchKeys":["TrackVisibilityEffect","fun TrackVisibilityEffect(onVisibilityChanged: (visible: Boolean) -> Unit)","com.icell.external.carlosformito.core.ui.TrackVisibilityEffect"]},{"name":"fun of(errorMessageId: Int?, formatArgs: List<Any>? = null): FormFieldValidationResult.Invalid","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Companion.of","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-companion/of.html","searchKeys":["of","fun of(errorMessageId: Int?, formatArgs: List<Any>? = null): FormFieldValidationResult.Invalid","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Companion.of"]},{"name":"interface CrossFormFieldValidator<T> : IsFormFieldValidator<T> ","description":"com.icell.external.carlosformito.core.api.validator.CrossFormFieldValidator","location":"core/com.icell.external.carlosformito.core.api.validator/-cross-form-field-validator/index.html","searchKeys":["CrossFormFieldValidator","interface CrossFormFieldValidator<T> : IsFormFieldValidator<T> ","com.icell.external.carlosformito.core.api.validator.CrossFormFieldValidator"]},{"name":"interface FormFieldItem<T>","description":"com.icell.external.carlosformito.core.api.FormFieldItem","location":"core/com.icell.external.carlosformito.core.api/-form-field-item/index.html","searchKeys":["FormFieldItem","interface FormFieldItem<T>","com.icell.external.carlosformito.core.api.FormFieldItem"]},{"name":"interface FormFieldItemListener","description":"com.icell.external.carlosformito.core.api.FormFieldItemListener","location":"core/com.icell.external.carlosformito.core.api/-form-field-item-listener/index.html","searchKeys":["FormFieldItemListener","interface FormFieldItemListener","com.icell.external.carlosformito.core.api.FormFieldItemListener"]},{"name":"interface FormFieldValidator<T> : IsFormFieldValidator<T> ","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidator","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validator/index.html","searchKeys":["FormFieldValidator","interface FormFieldValidator<T> : IsFormFieldValidator<T> ","com.icell.external.carlosformito.core.api.validator.FormFieldValidator"]},{"name":"interface FormManager : FormFieldItemListener, FormValueContext","description":"com.icell.external.carlosformito.core.api.FormManager","location":"core/com.icell.external.carlosformito.core.api/-form-manager/index.html","searchKeys":["FormManager","interface FormManager : FormFieldItemListener, FormValueContext","com.icell.external.carlosformito.core.api.FormManager"]},{"name":"interface FormValueContext","description":"com.icell.external.carlosformito.core.api.validator.FormValueContext","location":"core/com.icell.external.carlosformito.core.api.validator/-form-value-context/index.html","searchKeys":["FormValueContext","interface FormValueContext","com.icell.external.carlosformito.core.api.validator.FormValueContext"]},{"name":"object Companion","description":"com.icell.external.carlosformito.core.CarlosFormManager.Companion","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.icell.external.carlosformito.core.CarlosFormManager.Companion"]},{"name":"object Companion","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Companion","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-companion/index.html","searchKeys":["Companion","object Companion","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Companion"]},{"name":"object Companion","description":"com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.Companion","location":"core/com.icell.external.carlosformito.core.validator/-contains-special-character-validator/-companion/index.html","searchKeys":["Companion","object Companion","com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.Companion"]},{"name":"object Companion","description":"com.icell.external.carlosformito.core.validator.TextMinLengthValidator.Companion","location":"core/com.icell.external.carlosformito.core.validator/-text-min-length-validator/-companion/index.html","searchKeys":["Companion","object Companion","com.icell.external.carlosformito.core.validator.TextMinLengthValidator.Companion"]},{"name":"object Regexp","description":"com.icell.external.carlosformito.core.validator.regex.Regexp","location":"core/com.icell.external.carlosformito.core.validator.regex/-regexp/index.html","searchKeys":["Regexp","object Regexp","com.icell.external.carlosformito.core.validator.regex.Regexp"]},{"name":"open override fun <T> getFieldItem(id: String): FormFieldItem<T>","description":"com.icell.external.carlosformito.core.CarlosFormManager.getFieldItem","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/get-field-item.html","searchKeys":["getFieldItem","open override fun <T> getFieldItem(id: String): FormFieldItem<T>","com.icell.external.carlosformito.core.CarlosFormManager.getFieldItem"]},{"name":"open override fun <T> getFieldValue(id: String): T?","description":"com.icell.external.carlosformito.core.CarlosFormManager.getFieldValue","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/get-field-value.html","searchKeys":["getFieldValue","open override fun <T> getFieldValue(id: String): T?","com.icell.external.carlosformito.core.CarlosFormManager.getFieldValue"]},{"name":"open override fun <T> onFieldValueChanged(id: String, value: T?)","description":"com.icell.external.carlosformito.core.CarlosFormManager.onFieldValueChanged","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/on-field-value-changed.html","searchKeys":["onFieldValueChanged","open override fun <T> onFieldValueChanged(id: String, value: T?)","com.icell.external.carlosformito.core.CarlosFormManager.onFieldValueChanged"]},{"name":"open override fun clearForm()","description":"com.icell.external.carlosformito.core.CarlosFormManager.clearForm","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/clear-form.html","searchKeys":["clearForm","open override fun clearForm()","com.icell.external.carlosformito.core.CarlosFormManager.clearForm"]},{"name":"open override fun onFieldFocusCleared(id: String)","description":"com.icell.external.carlosformito.core.CarlosFormManager.onFieldFocusCleared","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/on-field-focus-cleared.html","searchKeys":["onFieldFocusCleared","open override fun onFieldFocusCleared(id: String)","com.icell.external.carlosformito.core.CarlosFormManager.onFieldFocusCleared"]},{"name":"open override fun onFieldValueReset(id: String)","description":"com.icell.external.carlosformito.core.CarlosFormManager.onFieldValueReset","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/on-field-value-reset.html","searchKeys":["onFieldValueReset","open override fun onFieldValueReset(id: String)","com.icell.external.carlosformito.core.CarlosFormManager.onFieldValueReset"]},{"name":"open override fun onFieldVisibilityChanged(id: String, visible: Boolean)","description":"com.icell.external.carlosformito.core.CarlosFormManager.onFieldVisibilityChanged","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/on-field-visibility-changed.html","searchKeys":["onFieldVisibilityChanged","open override fun onFieldVisibilityChanged(id: String, visible: Boolean)","com.icell.external.carlosformito.core.CarlosFormManager.onFieldVisibilityChanged"]},{"name":"open override fun printFormState()","description":"com.icell.external.carlosformito.core.CarlosFormManager.printFormState","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/print-form-state.html","searchKeys":["printFormState","open override fun printFormState()","com.icell.external.carlosformito.core.CarlosFormManager.printFormState"]},{"name":"open override fun setFormInvalid()","description":"com.icell.external.carlosformito.core.CarlosFormManager.setFormInvalid","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/set-form-invalid.html","searchKeys":["setFormInvalid","open override fun setFormInvalid()","com.icell.external.carlosformito.core.CarlosFormManager.setFormInvalid"]},{"name":"open override val allRequiredFieldFilled: StateFlow<Boolean>","description":"com.icell.external.carlosformito.core.CarlosFormManager.allRequiredFieldFilled","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/all-required-field-filled.html","searchKeys":["allRequiredFieldFilled","open override val allRequiredFieldFilled: StateFlow<Boolean>","com.icell.external.carlosformito.core.CarlosFormManager.allRequiredFieldFilled"]},{"name":"open override val connectedFieldId: String","description":"com.icell.external.carlosformito.core.validator.connections.CompareToValidator.connectedFieldId","location":"core/com.icell.external.carlosformito.core.validator.connections/-compare-to-validator/connected-field-id.html","searchKeys":["connectedFieldId","open override val connectedFieldId: String","com.icell.external.carlosformito.core.validator.connections.CompareToValidator.connectedFieldId"]},{"name":"open override val connectedFieldId: String","description":"com.icell.external.carlosformito.core.validator.connections.EqualsToValidator.connectedFieldId","location":"core/com.icell.external.carlosformito.core.validator.connections/-equals-to-validator/connected-field-id.html","searchKeys":["connectedFieldId","open override val connectedFieldId: String","com.icell.external.carlosformito.core.validator.connections.EqualsToValidator.connectedFieldId"]},{"name":"open override val connectedFieldId: String","description":"com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator.connectedFieldId","location":"core/com.icell.external.carlosformito.core.validator.connections/-not-equals-to-validator/connected-field-id.html","searchKeys":["connectedFieldId","open override val connectedFieldId: String","com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator.connectedFieldId"]},{"name":"open override val errorMessageId: Int","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Message.errorMessageId","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message/error-message-id.html","searchKeys":["errorMessageId","open override val errorMessageId: Int","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.Message.errorMessageId"]},{"name":"open override val errorMessageId: Int","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs.errorMessageId","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message-with-args/error-message-id.html","searchKeys":["errorMessageId","open override val errorMessageId: Int","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs.errorMessageId"]},{"name":"open override val validationInProgress: StateFlow<Boolean>","description":"com.icell.external.carlosformito.core.CarlosFormManager.validationInProgress","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/validation-in-progress.html","searchKeys":["validationInProgress","open override val validationInProgress: StateFlow<Boolean>","com.icell.external.carlosformito.core.CarlosFormManager.validationInProgress"]},{"name":"open suspend override fun initFormManager(autoValidationExceptionHandler: CoroutineExceptionHandler?)","description":"com.icell.external.carlosformito.core.CarlosFormManager.initFormManager","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/init-form-manager.html","searchKeys":["initFormManager","open suspend override fun initFormManager(autoValidationExceptionHandler: CoroutineExceptionHandler?)","com.icell.external.carlosformito.core.CarlosFormManager.initFormManager"]},{"name":"open suspend override fun validate(value: Int?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.IntegerMaxValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-integer-max-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: Int?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.IntegerMaxValidator.validate"]},{"name":"open suspend override fun validate(value: Int?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.IntegerMinMaxValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-integer-min-max-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: Int?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.IntegerMinMaxValidator.validate"]},{"name":"open suspend override fun validate(value: Int?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.IntegerMinValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-integer-min-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: Int?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.IntegerMinValidator.validate"]},{"name":"open suspend override fun validate(value: LocalDate?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.DateMaxValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-date-max-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: LocalDate?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.DateMaxValidator.validate"]},{"name":"open suspend override fun validate(value: LocalDate?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.DateMinMaxValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-date-min-max-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: LocalDate?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.DateMinMaxValidator.validate"]},{"name":"open suspend override fun validate(value: LocalDate?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.DateMinValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-date-min-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: LocalDate?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.DateMinValidator.validate"]},{"name":"open suspend override fun validate(value: LocalTime?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.TimeMaxValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-time-max-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: LocalTime?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.TimeMaxValidator.validate"]},{"name":"open suspend override fun validate(value: LocalTime?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.TimeMinMaxValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-time-min-max-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: LocalTime?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.TimeMinMaxValidator.validate"]},{"name":"open suspend override fun validate(value: LocalTime?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.TimeMinValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-time-min-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: LocalTime?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.TimeMinValidator.validate"]},{"name":"open suspend override fun validate(value: String?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.ContainsNumberValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-contains-number-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: String?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.ContainsNumberValidator.validate"]},{"name":"open suspend override fun validate(value: String?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-contains-special-character-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: String?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.ContainsSpecialCharacterValidator.validate"]},{"name":"open suspend override fun validate(value: String?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.ContainsUpperAndLowercaseValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-contains-upper-and-lowercase-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: String?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.ContainsUpperAndLowercaseValidator.validate"]},{"name":"open suspend override fun validate(value: String?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.TextMinLengthValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-text-min-length-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: String?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.TextMinLengthValidator.validate"]},{"name":"open suspend override fun validate(value: String?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.TextRegexValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-text-regex-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: String?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.TextRegexValidator.validate"]},{"name":"open suspend override fun validate(value: T?): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.ValueRequiredValidator.validate","location":"core/com.icell.external.carlosformito.core.validator/-value-required-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: T?): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.ValueRequiredValidator.validate"]},{"name":"open suspend override fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.connections.CompareToValidator.validate","location":"core/com.icell.external.carlosformito.core.validator.connections/-compare-to-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.connections.CompareToValidator.validate"]},{"name":"open suspend override fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.connections.EqualsToValidator.validate","location":"core/com.icell.external.carlosformito.core.validator.connections/-equals-to-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.connections.EqualsToValidator.validate"]},{"name":"open suspend override fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","description":"com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator.validate","location":"core/com.icell.external.carlosformito.core.validator.connections/-not-equals-to-validator/validate.html","searchKeys":["validate","open suspend override fun validate(value: T?, context: FormValueContext): FormFieldValidationResult","com.icell.external.carlosformito.core.validator.connections.NotEqualsToValidator.validate"]},{"name":"open suspend override fun validateField(id: String): Boolean","description":"com.icell.external.carlosformito.core.CarlosFormManager.validateField","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/validate-field.html","searchKeys":["validateField","open suspend override fun validateField(id: String): Boolean","com.icell.external.carlosformito.core.CarlosFormManager.validateField"]},{"name":"open suspend override fun validateForm(): Boolean","description":"com.icell.external.carlosformito.core.CarlosFormManager.validateForm","location":"core/com.icell.external.carlosformito.core/-carlos-form-manager/validate-form.html","searchKeys":["validateForm","open suspend override fun validateForm(): Boolean","com.icell.external.carlosformito.core.CarlosFormManager.validateForm"]},{"name":"open val errorMessageId: Int? = null","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.errorMessageId","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/error-message-id.html","searchKeys":["errorMessageId","open val errorMessageId: Int? = null","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.errorMessageId"]},{"name":"sealed class Invalid : FormFieldValidationResult","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/index.html","searchKeys":["Invalid","sealed class Invalid : FormFieldValidationResult","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid"]},{"name":"sealed interface FormFieldValidationResult","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/index.html","searchKeys":["FormFieldValidationResult","sealed interface FormFieldValidationResult","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult"]},{"name":"sealed interface FormFieldValidationStrategy","description":"com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-validation-strategy/index.html","searchKeys":["FormFieldValidationStrategy","sealed interface FormFieldValidationStrategy","com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy"]},{"name":"sealed interface IsFormFieldValidator<T>","description":"com.icell.external.carlosformito.core.api.validator.IsFormFieldValidator","location":"core/com.icell.external.carlosformito.core.api.validator/-is-form-field-validator/index.html","searchKeys":["IsFormFieldValidator","sealed interface IsFormFieldValidator<T>","com.icell.external.carlosformito.core.api.validator.IsFormFieldValidator"]},{"name":"val <T> FormFieldItem<T>.valueState: Flow<T?>","description":"com.icell.external.carlosformito.core.api.valueState","location":"core/com.icell.external.carlosformito.core.api/value-state.html","searchKeys":["valueState","val <T> FormFieldItem<T>.valueState: Flow<T?>","com.icell.external.carlosformito.core.api.valueState"]},{"name":"val customValidationStrategy: FormFieldValidationStrategy? = null","description":"com.icell.external.carlosformito.core.api.model.FormField.customValidationStrategy","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/custom-validation-strategy.html","searchKeys":["customValidationStrategy","val customValidationStrategy: FormFieldValidationStrategy? = null","com.icell.external.carlosformito.core.api.model.FormField.customValidationStrategy"]},{"name":"val delay: Duration? = null","description":"com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoInline.delay","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-validation-strategy/-auto-inline/delay.html","searchKeys":["delay","val delay: Duration? = null","com.icell.external.carlosformito.core.api.model.FormFieldValidationStrategy.AutoInline.delay"]},{"name":"val formatArgs: List<Any>","description":"com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs.formatArgs","location":"core/com.icell.external.carlosformito.core.api.validator/-form-field-validation-result/-invalid/-message-with-args/format-args.html","searchKeys":["formatArgs","val formatArgs: List<Any>","com.icell.external.carlosformito.core.api.validator.FormFieldValidationResult.Invalid.MessageWithArgs.formatArgs"]},{"name":"val id: String","description":"com.icell.external.carlosformito.core.api.model.FormField.id","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/id.html","searchKeys":["id","val id: String","com.icell.external.carlosformito.core.api.model.FormField.id"]},{"name":"val initialState: FormFieldState<T>","description":"com.icell.external.carlosformito.core.api.model.FormField.initialState","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/initial-state.html","searchKeys":["initialState","val initialState: FormFieldState<T>","com.icell.external.carlosformito.core.api.model.FormField.initialState"]},{"name":"val initialValidationResult: FormFieldValidationResult? = null","description":"com.icell.external.carlosformito.core.api.model.FormField.initialValidationResult","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/initial-validation-result.html","searchKeys":["initialValidationResult","val initialValidationResult: FormFieldValidationResult? = null","com.icell.external.carlosformito.core.api.model.FormField.initialValidationResult"]},{"name":"val initialValue: T? = null","description":"com.icell.external.carlosformito.core.api.model.FormField.initialValue","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/initial-value.html","searchKeys":["initialValue","val initialValue: T? = null","com.icell.external.carlosformito.core.api.model.FormField.initialValue"]},{"name":"val isError: Boolean","description":"com.icell.external.carlosformito.core.api.model.FormFieldState.isError","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/is-error.html","searchKeys":["isError","val isError: Boolean","com.icell.external.carlosformito.core.api.model.FormFieldState.isError"]},{"name":"val isFilled: Boolean","description":"com.icell.external.carlosformito.core.api.model.FormFieldState.isFilled","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/is-filled.html","searchKeys":["isFilled","val isFilled: Boolean","com.icell.external.carlosformito.core.api.model.FormFieldState.isFilled"]},{"name":"val validationInProgress: Boolean = false","description":"com.icell.external.carlosformito.core.api.model.FormFieldState.validationInProgress","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/validation-in-progress.html","searchKeys":["validationInProgress","val validationInProgress: Boolean = false","com.icell.external.carlosformito.core.api.model.FormFieldState.validationInProgress"]},{"name":"val validationResult: FormFieldValidationResult? = null","description":"com.icell.external.carlosformito.core.api.model.FormFieldState.validationResult","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/validation-result.html","searchKeys":["validationResult","val validationResult: FormFieldValidationResult? = null","com.icell.external.carlosformito.core.api.model.FormFieldState.validationResult"]},{"name":"val validators: List<IsFormFieldValidator<T>>","description":"com.icell.external.carlosformito.core.api.model.FormField.validators","location":"core/com.icell.external.carlosformito.core.api.model/-form-field/validators.html","searchKeys":["validators","val validators: List<IsFormFieldValidator<T>>","com.icell.external.carlosformito.core.api.model.FormField.validators"]},{"name":"val value: T? = null","description":"com.icell.external.carlosformito.core.api.model.FormFieldState.value","location":"core/com.icell.external.carlosformito.core.api.model/-form-field-state/value.html","searchKeys":["value","val value: T? = null","com.icell.external.carlosformito.core.api.model.FormFieldState.value"]},{"name":"class CarlosFieldConfigs(val outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/index.html","searchKeys":["CarlosFieldConfigs","class CarlosFieldConfigs(val outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs"]},{"name":"class CarlosFormatDefaults(val dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, val timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), timeFormat: Int? = null)","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/index.html","searchKeys":["CarlosFormatDefaults","class CarlosFormatDefaults(val dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, val timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), timeFormat: Int? = null)","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults"]},{"name":"constructor(dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), timeFormat: Int? = null)","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.CarlosFormatDefaults","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/-carlos-format-defaults.html","searchKeys":["CarlosFormatDefaults","constructor(dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), timeFormat: Int? = null)","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.CarlosFormatDefaults"]},{"name":"constructor(outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.CarlosFieldConfigs","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/-carlos-field-configs.html","searchKeys":["CarlosFieldConfigs","constructor(outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.CarlosFieldConfigs"]},{"name":"fun <T> FormPickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<T>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.Edit, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, onClick: () -> Unit, displayedValue: (T?) -> String, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormPickerField","location":"material/com.icell.external.carlosformito.ui.field/-form-picker-field.html","searchKeys":["FormPickerField","fun <T> FormPickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<T>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.Edit, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, onClick: () -> Unit, displayedValue: (T?) -> String, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormPickerField"]},{"name":"fun BasePickerField(value: String, onClick: () -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, onClear: () -> Unit = {}, isClearable: Boolean = false, enabled: Boolean = true, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, isError: Boolean = false, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.base.BasePickerField","location":"material/com.icell.external.carlosformito.ui.field.base/-base-picker-field.html","searchKeys":["BasePickerField","fun BasePickerField(value: String, onClick: () -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, onClear: () -> Unit = {}, isClearable: Boolean = false, enabled: Boolean = true, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, isError: Boolean = false, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.base.BasePickerField"]},{"name":"fun BaseTextField(value: String, onValueChange: (String) -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, enabled: Boolean = true, readOnly: Boolean = false, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, isError: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.base.BaseTextField","location":"material/com.icell.external.carlosformito.ui.field.base/-base-text-field.html","searchKeys":["BaseTextField","fun BaseTextField(value: String, onValueChange: (String) -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, enabled: Boolean = true, readOnly: Boolean = false, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, isError: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.base.BaseTextField"]},{"name":"fun Context.requireActivity(): AppCompatActivity","description":"com.icell.external.carlosformito.ui.extension.requireActivity","location":"material/com.icell.external.carlosformito.ui.extension/require-activity.html","searchKeys":["requireActivity","fun Context.requireActivity(): AppCompatActivity","com.icell.external.carlosformito.ui.extension.requireActivity"]},{"name":"fun FormDatePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalDate>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.CalendarMonth, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, dateFormatter: DateTimeFormatter = LocalCarlosFormats.current.dateFormatter, dialogTitle: String, minDate: LocalDate? = null, maxDate: LocalDate? = null, onClick: () -> Unit? = null, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormDatePickerField","location":"material/com.icell.external.carlosformito.ui.field/-form-date-picker-field.html","searchKeys":["FormDatePickerField","fun FormDatePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalDate>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.CalendarMonth, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, dateFormatter: DateTimeFormatter = LocalCarlosFormats.current.dateFormatter, dialogTitle: String, minDate: LocalDate? = null, maxDate: LocalDate? = null, onClick: () -> Unit? = null, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormDatePickerField"]},{"name":"fun FormIntegerField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<Int>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormIntegerField","location":"material/com.icell.external.carlosformito.ui.field/-form-integer-field.html","searchKeys":["FormIntegerField","fun FormIntegerField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<Int>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormIntegerField"]},{"name":"fun FormPasswordTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, passwordVisibleIcon: ImageVector = Icons.Default.Visibility, passwordInvisibleIcon: ImageVector = Icons.Default.VisibilityOff, enabled: Boolean = true, readOnly: Boolean = false, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormPasswordTextField","location":"material/com.icell.external.carlosformito.ui.field/-form-password-text-field.html","searchKeys":["FormPasswordTextField","fun FormPasswordTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, passwordVisibleIcon: ImageVector = Icons.Default.Visibility, passwordInvisibleIcon: ImageVector = Icons.Default.VisibilityOff, enabled: Boolean = true, readOnly: Boolean = false, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormPasswordTextField"]},{"name":"fun FormTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null, inputPattern: String? = null, textChanger: (String) -> String? = null)","description":"com.icell.external.carlosformito.ui.field.FormTextField","location":"material/com.icell.external.carlosformito.ui.field/-form-text-field.html","searchKeys":["FormTextField","fun FormTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions(), singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null, inputPattern: String? = null, textChanger: (String) -> String? = null)","com.icell.external.carlosformito.ui.field.FormTextField"]},{"name":"fun FormTimePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalTime>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.AccessTime, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, timeFormatter: DateTimeFormatter = LocalCarlosFormats.current.timeFormatter, dialogTitle: String, onClick: () -> Unit? = null, timeFormat: Int = LocalCarlosFormats.current.timeFormat, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormTimePickerField","location":"material/com.icell.external.carlosformito.ui.field/-form-time-picker-field.html","searchKeys":["FormTimePickerField","fun FormTimePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalTime>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.AccessTime, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, timeFormatter: DateTimeFormatter = LocalCarlosFormats.current.timeFormatter, dialogTitle: String, onClick: () -> Unit? = null, timeFormat: Int = LocalCarlosFormats.current.timeFormat, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormTimePickerField"]},{"name":"fun TextFieldSupportingText(modifier: Modifier = Modifier, isError: Boolean, supportingText: CharSequence)","description":"com.icell.external.carlosformito.ui.field.base.TextFieldSupportingText","location":"material/com.icell.external.carlosformito.ui.field.base/-text-field-supporting-text.html","searchKeys":["TextFieldSupportingText","fun TextFieldSupportingText(modifier: Modifier = Modifier, isError: Boolean, supportingText: CharSequence)","com.icell.external.carlosformito.ui.field.base.TextFieldSupportingText"]},{"name":"fun build(dialogTitle: String, minDate: LocalDate? = null, maxDate: LocalDate? = null, selectedDate: LocalDate? = null, onDateSelected: (LocalDate) -> Unit, absoluteMinDate: LocalDate = ABSOLUTE_MIN_DATE): MaterialDatePicker<Long>","description":"com.icell.external.carlosformito.ui.util.DatePickerBuilder.build","location":"material/com.icell.external.carlosformito.ui.util/-date-picker-builder/build.html","searchKeys":["build","fun build(dialogTitle: String, minDate: LocalDate? = null, maxDate: LocalDate? = null, selectedDate: LocalDate? = null, onDateSelected: (LocalDate) -> Unit, absoluteMinDate: LocalDate = ABSOLUTE_MIN_DATE): MaterialDatePicker<Long>","com.icell.external.carlosformito.ui.util.DatePickerBuilder.build"]},{"name":"fun build(dialogTitle: String, selectedTime: LocalTime? = null, timeFormat: Int = TimeFormat.CLOCK_24H, onTimeSelected: (LocalTime) -> Unit): MaterialTimePicker","description":"com.icell.external.carlosformito.ui.util.TimePickerBuilder.build","location":"material/com.icell.external.carlosformito.ui.util/-time-picker-builder/build.html","searchKeys":["build","fun build(dialogTitle: String, selectedTime: LocalTime? = null, timeFormat: Int = TimeFormat.CLOCK_24H, onTimeSelected: (LocalTime) -> Unit): MaterialTimePicker","com.icell.external.carlosformito.ui.util.TimePickerBuilder.build"]},{"name":"fun textSelectionColors(isError: Boolean): TextSelectionColors","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textSelectionColors","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/text-selection-colors.html","searchKeys":["textSelectionColors","fun textSelectionColors(isError: Boolean): TextSelectionColors","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textSelectionColors"]},{"name":"object DatePickerBuilder","description":"com.icell.external.carlosformito.ui.util.DatePickerBuilder","location":"material/com.icell.external.carlosformito.ui.util/-date-picker-builder/index.html","searchKeys":["DatePickerBuilder","object DatePickerBuilder","com.icell.external.carlosformito.ui.util.DatePickerBuilder"]},{"name":"object TimePickerBuilder","description":"com.icell.external.carlosformito.ui.util.TimePickerBuilder","location":"material/com.icell.external.carlosformito.ui.util/-time-picker-builder/index.html","searchKeys":["TimePickerBuilder","object TimePickerBuilder","com.icell.external.carlosformito.ui.util.TimePickerBuilder"]},{"name":"val LocalCarlosConfigs: ProvidableCompositionLocal<CarlosFieldConfigs>","description":"com.icell.external.carlosformito.ui.theme.LocalCarlosConfigs","location":"material/com.icell.external.carlosformito.ui.theme/-local-carlos-configs.html","searchKeys":["LocalCarlosConfigs","val LocalCarlosConfigs: ProvidableCompositionLocal<CarlosFieldConfigs>","com.icell.external.carlosformito.ui.theme.LocalCarlosConfigs"]},{"name":"val LocalCarlosFormats: ProvidableCompositionLocal<CarlosFormatDefaults>","description":"com.icell.external.carlosformito.ui.theme.LocalCarlosFormats","location":"material/com.icell.external.carlosformito.ui.theme/-local-carlos-formats.html","searchKeys":["LocalCarlosFormats","val LocalCarlosFormats: ProvidableCompositionLocal<CarlosFormatDefaults>","com.icell.external.carlosformito.ui.theme.LocalCarlosFormats"]},{"name":"val colors: TextFieldColors","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.colors","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/colors.html","searchKeys":["colors","val colors: TextFieldColors","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.colors"]},{"name":"val dateFormatter: DateTimeFormatter","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.dateFormatter","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/date-formatter.html","searchKeys":["dateFormatter","val dateFormatter: DateTimeFormatter","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.dateFormatter"]},{"name":"val errorTextColor: Color","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.errorTextColor","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/error-text-color.html","searchKeys":["errorTextColor","val errorTextColor: Color","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.errorTextColor"]},{"name":"val outlined: Boolean = false","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.outlined","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/outlined.html","searchKeys":["outlined","val outlined: Boolean = false","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.outlined"]},{"name":"val shape: Shape","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.shape","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/shape.html","searchKeys":["shape","val shape: Shape","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.shape"]},{"name":"val supportingTextColor: Color","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.supportingTextColor","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/supporting-text-color.html","searchKeys":["supportingTextColor","val supportingTextColor: Color","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.supportingTextColor"]},{"name":"val textStyle: TextStyle","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textStyle","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/text-style.html","searchKeys":["textStyle","val textStyle: TextStyle","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textStyle"]},{"name":"val timeFormat: Int","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.timeFormat","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/time-format.html","searchKeys":["timeFormat","val timeFormat: Int","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.timeFormat"]},{"name":"val timeFormatter: DateTimeFormatter","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.timeFormatter","location":"material/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/time-formatter.html","searchKeys":["timeFormatter","val timeFormatter: DateTimeFormatter","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.timeFormatter"]},{"name":"class CarlosFieldConfigs(val outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/index.html","searchKeys":["CarlosFieldConfigs","class CarlosFieldConfigs(val outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs"]},{"name":"class CarlosFormatDefaults(val dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, val timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), is24HourFormat: Boolean? = true)","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/index.html","searchKeys":["CarlosFormatDefaults","class CarlosFormatDefaults(val dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, val timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), is24HourFormat: Boolean? = true)","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults"]},{"name":"constructor(dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), is24HourFormat: Boolean? = true)","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.CarlosFormatDefaults","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/-carlos-format-defaults.html","searchKeys":["CarlosFormatDefaults","constructor(dateFormatter: DateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE, timeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"HH:mm\"), is24HourFormat: Boolean? = true)","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.CarlosFormatDefaults"]},{"name":"constructor(outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.CarlosFieldConfigs","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/-carlos-field-configs.html","searchKeys":["CarlosFieldConfigs","constructor(outlined: Boolean = false, textStyle: TextStyle? = null, shape: Shape? = null, colors: TextFieldColors? = null, supportingTextColor: Color? = null, errorTextColor: Color? = null, textSelectionColor: Color? = null, textSelectionErrorColor: Color? = null)","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.CarlosFieldConfigs"]},{"name":"fun <T> FormPickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<T>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.Edit, prefix: () -> Unit? = null, suffix: () -> Unit? = null, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, onClick: () -> Unit, displayedValue: (T?) -> String, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormPickerField","location":"material3/com.icell.external.carlosformito.ui.field/-form-picker-field.html","searchKeys":["FormPickerField","fun <T> FormPickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<T>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.Edit, prefix: () -> Unit? = null, suffix: () -> Unit? = null, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, onClick: () -> Unit, displayedValue: (T?) -> String, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormPickerField"]},{"name":"fun BasePickerField(value: String, onClick: () -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, onClear: () -> Unit = {}, isClearable: Boolean = false, enabled: Boolean = true, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, isError: Boolean = false, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.base.BasePickerField","location":"material3/com.icell.external.carlosformito.ui.field.base/-base-picker-field.html","searchKeys":["BasePickerField","fun BasePickerField(value: String, onClick: () -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, onClear: () -> Unit = {}, isClearable: Boolean = false, enabled: Boolean = true, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, isError: Boolean = false, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.base.BasePickerField"]},{"name":"fun BaseTextField(value: String, onValueChange: (String) -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, enabled: Boolean = true, readOnly: Boolean = false, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, isError: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.base.BaseTextField","location":"material3/com.icell.external.carlosformito.ui.field.base/-base-text-field.html","searchKeys":["BaseTextField","fun BaseTextField(value: String, onValueChange: (String) -> Unit, onVisibilityChange: (visible: Boolean) -> Unit, onFocusCleared: () -> Unit, modifier: Modifier = Modifier, enabled: Boolean = true, readOnly: Boolean = false, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, isError: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, textSelectionColors: TextSelectionColors = LocalCarlosConfigs.current.textSelectionColors(isError), contentDescription: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.base.BaseTextField"]},{"name":"fun CarlosDatePicker(dialogTitle: String, dialogHeadline: String? = null, selectedDate: LocalDate?, minDate: LocalDate? = null, maxDate: LocalDate? = null, formatter: DateTimeFormatter, onSelectDate: (LocalDate?) -> Unit, hideDialog: () -> Unit)","description":"com.icell.external.carlosformito.ui.datepicker.CarlosDatePicker","location":"material3/com.icell.external.carlosformito.ui.datepicker/-carlos-date-picker.html","searchKeys":["CarlosDatePicker","fun CarlosDatePicker(dialogTitle: String, dialogHeadline: String? = null, selectedDate: LocalDate?, minDate: LocalDate? = null, maxDate: LocalDate? = null, formatter: DateTimeFormatter, onSelectDate: (LocalDate?) -> Unit, hideDialog: () -> Unit)","com.icell.external.carlosformito.ui.datepicker.CarlosDatePicker"]},{"name":"fun ChangeLayoutIcon(displayMode: MutableState<DisplayMode>)","description":"com.icell.external.carlosformito.ui.field.ChangeLayoutIcon","location":"material3/com.icell.external.carlosformito.ui.field/-change-layout-icon.html","searchKeys":["ChangeLayoutIcon","fun ChangeLayoutIcon(displayMode: MutableState<DisplayMode>)","com.icell.external.carlosformito.ui.field.ChangeLayoutIcon"]},{"name":"fun FormDatePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalDate>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.CalendarMonth, prefix: () -> Unit? = null, suffix: () -> Unit? = null, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, dateFormatter: DateTimeFormatter = LocalCarlosFormats.current.dateFormatter, dialogTitle: String, dialogHeadline: String? = null, minDate: LocalDate? = null, maxDate: LocalDate? = null, onClick: () -> Unit? = null, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormDatePickerField","location":"material3/com.icell.external.carlosformito.ui.field/-form-date-picker-field.html","searchKeys":["FormDatePickerField","fun FormDatePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalDate>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.CalendarMonth, prefix: () -> Unit? = null, suffix: () -> Unit? = null, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, dateFormatter: DateTimeFormatter = LocalCarlosFormats.current.dateFormatter, dialogTitle: String, dialogHeadline: String? = null, minDate: LocalDate? = null, maxDate: LocalDate? = null, onClick: () -> Unit? = null, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormDatePickerField"]},{"name":"fun FormIntegerField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<Int>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormIntegerField","location":"material3/com.icell.external.carlosformito.ui.field/-form-integer-field.html","searchKeys":["FormIntegerField","fun FormIntegerField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<Int>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormIntegerField"]},{"name":"fun FormPasswordTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, passwordVisibleIcon: ImageVector = Icons.Default.Visibility, passwordInvisibleIcon: ImageVector = Icons.Default.VisibilityOff, prefix: () -> Unit? = null, suffix: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormPasswordTextField","location":"material3/com.icell.external.carlosformito.ui.field/-form-password-text-field.html","searchKeys":["FormPasswordTextField","fun FormPasswordTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, passwordVisibleIcon: ImageVector = Icons.Default.Visibility, passwordInvisibleIcon: ImageVector = Icons.Default.VisibilityOff, prefix: () -> Unit? = null, suffix: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormPasswordTextField"]},{"name":"fun FormTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null, inputPattern: String? = null, textChanger: (String) -> String? = null)","description":"com.icell.external.carlosformito.ui.field.FormTextField","location":"material3/com.icell.external.carlosformito.ui.field/-form-text-field.html","searchKeys":["FormTextField","fun FormTextField(modifier: Modifier = Modifier, maxLength: Int? = null, fieldItem: FormFieldItem<String>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, prefix: () -> Unit? = null, suffix: () -> Unit? = null, enabled: Boolean = true, readOnly: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default, singleLine: Boolean = false, maxLines: Int = if (singleLine) 1 else Int.MAX_VALUE, minLines: Int = 1, interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null, inputPattern: String? = null, textChanger: (String) -> String? = null)","com.icell.external.carlosformito.ui.field.FormTextField"]},{"name":"fun FormTimePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalTime>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.AccessTime, prefix: () -> Unit? = null, suffix: () -> Unit? = null, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, timeFormatter: DateTimeFormatter = LocalCarlosFormats.current.timeFormatter, dialogTitle: String, onClick: () -> Unit? = null, is24HourFormat: Boolean = LocalCarlosFormats.current.is24HourFormat, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","description":"com.icell.external.carlosformito.ui.field.FormTimePickerField","location":"material3/com.icell.external.carlosformito.ui.field/-form-time-picker-field.html","searchKeys":["FormTimePickerField","fun FormTimePickerField(modifier: Modifier = Modifier, fieldItem: FormFieldItem<LocalTime>, textStyle: TextStyle = LocalCarlosConfigs.current.textStyle, label: () -> Unit? = null, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, pickerIcon: ImageVector = Icons.Default.AccessTime, prefix: () -> Unit? = null, suffix: () -> Unit? = null, outlined: Boolean = LocalCarlosConfigs.current.outlined, shape: Shape = LocalCarlosConfigs.current.shape, colors: TextFieldColors = LocalCarlosConfigs.current.colors, timeFormatter: DateTimeFormatter = LocalCarlosFormats.current.timeFormatter, dialogTitle: String, onClick: () -> Unit? = null, is24HourFormat: Boolean = LocalCarlosFormats.current.is24HourFormat, enabled: Boolean = true, isClearable: Boolean = true, clearIcon: ImageVector = Icons.Default.Clear, contentDescription: String? = null, customErrorMessage: String? = null, supportingText: CharSequence? = null, testTag: String? = null)","com.icell.external.carlosformito.ui.field.FormTimePickerField"]},{"name":"fun LocalDate.isAfterOrEqual(localDate: LocalDate): Boolean","description":"com.icell.external.carlosformito.ui.extension.isAfterOrEqual","location":"material3/com.icell.external.carlosformito.ui.extension/is-after-or-equal.html","searchKeys":["isAfterOrEqual","fun LocalDate.isAfterOrEqual(localDate: LocalDate): Boolean","com.icell.external.carlosformito.ui.extension.isAfterOrEqual"]},{"name":"fun LocalDate.isBeforeOrEqual(localDate: LocalDate): Boolean","description":"com.icell.external.carlosformito.ui.extension.isBeforeOrEqual","location":"material3/com.icell.external.carlosformito.ui.extension/is-before-or-equal.html","searchKeys":["isBeforeOrEqual","fun LocalDate.isBeforeOrEqual(localDate: LocalDate): Boolean","com.icell.external.carlosformito.ui.extension.isBeforeOrEqual"]},{"name":"fun LocalDate.isBetween(minDate: LocalDate, maxDate: LocalDate): Boolean","description":"com.icell.external.carlosformito.ui.extension.isBetween","location":"material3/com.icell.external.carlosformito.ui.extension/is-between.html","searchKeys":["isBetween","fun LocalDate.isBetween(minDate: LocalDate, maxDate: LocalDate): Boolean","com.icell.external.carlosformito.ui.extension.isBetween"]},{"name":"fun LocalDate.toEpochMillis(zoneId: ZoneId = ZoneId.systemDefault()): Long","description":"com.icell.external.carlosformito.ui.extension.toEpochMillis","location":"material3/com.icell.external.carlosformito.ui.extension/to-epoch-millis.html","searchKeys":["toEpochMillis","fun LocalDate.toEpochMillis(zoneId: ZoneId = ZoneId.systemDefault()): Long","com.icell.external.carlosformito.ui.extension.toEpochMillis"]},{"name":"fun Long.toLocalDate(zoneId: ZoneId = ZoneId.systemDefault()): LocalDate","description":"com.icell.external.carlosformito.ui.extension.toLocalDate","location":"material3/com.icell.external.carlosformito.ui.extension/to-local-date.html","searchKeys":["toLocalDate","fun Long.toLocalDate(zoneId: ZoneId = ZoneId.systemDefault()): LocalDate","com.icell.external.carlosformito.ui.extension.toLocalDate"]},{"name":"fun TextFieldSupportingText(modifier: Modifier = Modifier, isError: Boolean, supportingText: CharSequence)","description":"com.icell.external.carlosformito.ui.field.base.TextFieldSupportingText","location":"material3/com.icell.external.carlosformito.ui.field.base/-text-field-supporting-text.html","searchKeys":["TextFieldSupportingText","fun TextFieldSupportingText(modifier: Modifier = Modifier, isError: Boolean, supportingText: CharSequence)","com.icell.external.carlosformito.ui.field.base.TextFieldSupportingText"]},{"name":"fun rememberSelectableDates(minDate: LocalDate?, maxDate: LocalDate?): SelectableDates","description":"com.icell.external.carlosformito.ui.datepicker.rememberSelectableDates","location":"material3/com.icell.external.carlosformito.ui.datepicker/remember-selectable-dates.html","searchKeys":["rememberSelectableDates","fun rememberSelectableDates(minDate: LocalDate?, maxDate: LocalDate?): SelectableDates","com.icell.external.carlosformito.ui.datepicker.rememberSelectableDates"]},{"name":"fun textSelectionColors(isError: Boolean): TextSelectionColors","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textSelectionColors","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/text-selection-colors.html","searchKeys":["textSelectionColors","fun textSelectionColors(isError: Boolean): TextSelectionColors","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textSelectionColors"]},{"name":"val DatePickerState.selectedDate: LocalDate?","description":"com.icell.external.carlosformito.ui.extension.selectedDate","location":"material3/com.icell.external.carlosformito.ui.extension/selected-date.html","searchKeys":["selectedDate","val DatePickerState.selectedDate: LocalDate?","com.icell.external.carlosformito.ui.extension.selectedDate"]},{"name":"val LocalCarlosConfigs: ProvidableCompositionLocal<CarlosFieldConfigs>","description":"com.icell.external.carlosformito.ui.theme.LocalCarlosConfigs","location":"material3/com.icell.external.carlosformito.ui.theme/-local-carlos-configs.html","searchKeys":["LocalCarlosConfigs","val LocalCarlosConfigs: ProvidableCompositionLocal<CarlosFieldConfigs>","com.icell.external.carlosformito.ui.theme.LocalCarlosConfigs"]},{"name":"val LocalCarlosFormats: ProvidableCompositionLocal<CarlosFormatDefaults>","description":"com.icell.external.carlosformito.ui.theme.LocalCarlosFormats","location":"material3/com.icell.external.carlosformito.ui.theme/-local-carlos-formats.html","searchKeys":["LocalCarlosFormats","val LocalCarlosFormats: ProvidableCompositionLocal<CarlosFormatDefaults>","com.icell.external.carlosformito.ui.theme.LocalCarlosFormats"]},{"name":"val TimePickerState.selectedTime: LocalTime?","description":"com.icell.external.carlosformito.ui.extension.selectedTime","location":"material3/com.icell.external.carlosformito.ui.extension/selected-time.html","searchKeys":["selectedTime","val TimePickerState.selectedTime: LocalTime?","com.icell.external.carlosformito.ui.extension.selectedTime"]},{"name":"val colors: TextFieldColors","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.colors","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/colors.html","searchKeys":["colors","val colors: TextFieldColors","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.colors"]},{"name":"val dateFormatter: DateTimeFormatter","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.dateFormatter","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/date-formatter.html","searchKeys":["dateFormatter","val dateFormatter: DateTimeFormatter","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.dateFormatter"]},{"name":"val errorTextColor: Color","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.errorTextColor","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/error-text-color.html","searchKeys":["errorTextColor","val errorTextColor: Color","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.errorTextColor"]},{"name":"val is24HourFormat: Boolean","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.is24HourFormat","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/is24-hour-format.html","searchKeys":["is24HourFormat","val is24HourFormat: Boolean","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.is24HourFormat"]},{"name":"val outlined: Boolean = false","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.outlined","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/outlined.html","searchKeys":["outlined","val outlined: Boolean = false","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.outlined"]},{"name":"val shape: Shape","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.shape","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/shape.html","searchKeys":["shape","val shape: Shape","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.shape"]},{"name":"val supportingTextColor: Color","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.supportingTextColor","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/supporting-text-color.html","searchKeys":["supportingTextColor","val supportingTextColor: Color","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.supportingTextColor"]},{"name":"val textStyle: TextStyle","description":"com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textStyle","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-field-configs/text-style.html","searchKeys":["textStyle","val textStyle: TextStyle","com.icell.external.carlosformito.ui.theme.CarlosFieldConfigs.textStyle"]},{"name":"val timeFormatter: DateTimeFormatter","description":"com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.timeFormatter","location":"material3/com.icell.external.carlosformito.ui.theme/-carlos-format-defaults/time-formatter.html","searchKeys":["timeFormatter","val timeFormatter: DateTimeFormatter","com.icell.external.carlosformito.ui.theme.CarlosFormatDefaults.timeFormatter"]}]